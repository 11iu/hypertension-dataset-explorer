rm(list = ls())
# Clear console
cat("\014")  # ctrl+L
# Assigns number 0 through 10 to x1
x1 <- 0:10
# Assigns number 0 through 10 to x1
x1 <- 0:10
x1
# Descending order
x2 <- 10:0
x2
?seq  # R help on seq
# Ascending values (duplicates 1:10)
(x3 <- seq(10))
# Specify change in values
(x4 <- seq(30, 0, by = -3))
# c = concatenate (or combine or collect)
?c  # R help on c
x5 <- c(5, 4, 1, 6, 7, 2, 2, 3, 2, 8)
x5
?scan  # R help on scan
x6 <- scan()  # After running this command, go to console
?rep  # R help on rep
x7 <- rep(TRUE, 5)
x7
# Repeats set
x8 <- rep(c(TRUE, FALSE), 5)
x8
# Repeats items in set
x9 <- rep(c(TRUE, FALSE), each = 5)
x9
# Clear environment
rm(list = ls())
# Clear console
cat("\014")  # ctrl+L
# Clear mind :)
library(datasets)  # Load base packages manually
# Installs pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
# Use pacman to load add-on packages as desired
pacman::p_load(pacman, rio)
# From the official R documentation
browseURL("http://j.mp/2aFZUrJ")
# CSV
rio_csv <- import("~/Desktop/mbb.csv")
# CSV
rio_csv <- import("./Desktop/mbb.csv")
# CSV
rio_csv <- import("C:/users/Louis/downloads/CourseFiles/mbb.csv")
library(datasets)  # Load base packages manually
# Installs pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
# Use pacman to load add-on packages as desired
pacman::p_load(pacman, tidyverse)
?mtcars
head(mtcars)
cars <- mtcars[, c(1:4, 6:7, 9:11)]  # Select variables
head(cars)
# Save hierarchical clustering to "hc." This codes uses
# pipes from dplyr.
hc <- cars   %>%  # Get cars data
dist   %>%  # Compute distance/dissimilarity matrix
hclust      # Computer hierarchical clusters
plot(hc)          # Plot dendrogram
rect.hclust(hc, k = 2, border = "gray")
rect.hclust(hc, k = 3, border = "blue")
rect.hclust(hc, k = 4, border = "green4")
rect.hclust(hc, k = 5, border = "darkred")
# Clear environment
rm(list = ls())
# Clear packages
p_unload(all)  # Remove all add-ons
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# Packages I load every time; uses "pacman"
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
library(datasets)  # Load base packages manually
head(mtcars)
cars <- mtcars[, c(1:4, 6:7, 9:11)]  # Select variables
head(cars)
# For entire data frame ####################################
pc <- prcomp(cars,
center = TRUE,  # Centers means to 0 (optional)
scale = TRUE)   # Sets unit variance (helpful)
pc <- prcomp(~ mpg + cyl + disp + hp + wt + qsec + am +
gear + carb,
data = mtcars,
center = TRUE,
scale = TRUE)
# Get summary stats
summary(pc)
# Screeplot for number of components
plot(pc)
# Get standard deviations and rotation
pc
# See how cases load on PCs
predict(pc) %>% round(2)
# Biplot of first two components
biplot(pc)
# Clear environment
rm(list = ls())
# Clear packages
p_unload(all)  # Remove all add-ons
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
library(datasets)  # Load base packages manually
# Installs pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
# Use pacman to load add-on packages as desired
pacman::p_load(pacman, caret, lars, tidyverse)
?USJudgeRatings
head(USJudgeRatings)
data <- USJudgeRatings
# Define variable groups
x <- as.matrix(data[, -12])
y <- data[, 12]
# Using variable groups
reg1 <- lm(y ~ x)
# Or specify variables individually
reg1 <- lm(RTEN ~ CONT + INTG + DMNR + DILG + CFMG +
DECI + PREP + FAMI + ORAL + WRIT + PHYS,
data = USJudgeRatings)
# Results
reg1           # Coefficients only
summary(reg1)  # Inferential tests
library(ggplot2)
library(dplyr)
library(datasets)
myData <- iris
head(myData)
myData %>%
ggplot(aes(x = myData$Sepal.Length, y = myData$Sepal.Width)) +
geom_point()
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(myData)
myData %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point() +
labs(title = "Length vs Height of sepal",
x = "Sepal Length",
y = "Sepal Height")
library(shiny); runApp('Programming/hypertension-dataset-explorer/schyper.R')
install.packages('ape')
runApp('Programming/hypertension-dataset-explorer/schyper.R')
runApp('Programming/hypertension-dataset-explorer/app.R')
runApp('Programming/hypertension-dataset-explorer')
fluidPage(
titlePanel("scRNA data of Mouse and Rat for Hypertension"),
sidebarLayout(
sidebarPanel(width = 12,
tabsetPanel(
tabPanel("Documentation", value=1,
uiOutput('markdown')
),
tabPanel("Single Marker", value=2,
br(),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("dataset_single", "Dataset",
c(datasets))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("subset_single", "Numeric Analysis Type:",
c('Numeric Metadata', 'Genes','PCs'))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("reduction_single", "Reduction:",
c(reductions))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("categorical_single", "Identity:",
c(meta_cats))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("numeric_single", "Primary Numeric:", "")),
mainPanel(width = 12,
br(),
br(),
#h3(textOutput("caption")),
plotOutput("MarkerGenePlotSingle"),
plotOutput("ViolinPlotSingle"),
plotOutput("CategoricalPlotSingle")
)
),
tabPanel("Double Marker", value=3,
br(),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("dataset_double", "Dataset",
c(datasets))),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("subset_double", "Numeric Analysis Type:",
c('Numeric Metadata', 'Genes','PCs'))),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("reduction_double", "Reduction:",
c(reductions))),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("categorical", "Identity:",
c(meta_cats))),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("numeric", "Primary Numeric:", "")),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput('numeric2', 'Secondary Numeric', "")),
mainPanel(width = 12,
br(),
br(),
#h3(textOutput("caption")),
plotOutput("MarkerGenePlot"),
plotOutput("ViolinPlot"),
plotOutput("CategoricalPlot")
)
),
tabPanel("Marker Set (Grid)", value=4,
br(),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("dataset_markset", "Dataset",
c(datasets))),
selectInput("categorical_b", "Identity:",
c(meta_cats)),
selectizeInput("numeric_b", "Primary Numeric (csv format works here if pasted in):", "",
options = list(
delimiter = ',',
create = I("function(input, callback){
return {
value: input,
text: input
};
}")),
selected = NULL, multiple = TRUE), ## and switch multiple to True,
mainPanel(width = 12,
br(),
br(),
plotOutput("MarkerSet")
)
),
tabPanel("Multiple Feature Plot", value=5,
br(),
div(style="display: inline-block;vertical-align:top; width: 19%;",
selectInput("dataset_multifea", "Dataset",
c(datasets))),
selectInput("multiple_feature_categorical_plot", "Identity:",
c(meta_cats)),
selectInput("multiple_feature_reduction", "Reduction:",
c(reductions)),
selectizeInput("multiple_feature_list", "Primary Numeric: \n
- Csv format works best here if pasted in from premade lists. \n
- Optimal for 5-16 features. \n
- To be most effecient when removing entries hold SHIFT and click all, then delete.", "",
options = list(
maxItems=16,
delimiter = ',',
create = I("function(input, callback){
return {
value: input,
text: input
};
}")),
selected = NULL, multiple = TRUE), ## and switch multiple to True,
mainPanel(width = 12,
br(),
br(),
plotOutput("MultipleFeatureCategoricalPlot"),
plotOutput("MultipleFeaturePlot",  height = "1000px")
)
),
tabPanel("Cluster Tree", value=6,
br(),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("dataset_cluster", "Dataset",
c(datasets))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("identity_tree", "Identity:",
c(meta_cats))),
mainPanel(width = 12,
br(),
br(),
#h3(textOutput("caption")),
plotOutput("ClusterTree"),
)
),
tabPanel("Seperated Feature", value=7,
br(),
div(style="display: inline-block;vertical-align:top; width: 20%;",
selectInput("dataset_sepfea", "Dataset",
c(datasets))),
div(style="display: inline-block;vertical-align:top; width: 20%;",
selectInput("subset_seperated", "Numeric Analysis Type:",
c('Genes', 'Numeric Metadata','PCs'))),
div(style="display: inline-block;vertical-align:top; width: 20%;",
selectInput("reduction_seperated", "Reduction:",
c(reductions))),
div(style="display: inline-block;vertical-align:top; width: 20%;",
selectInput("identity_seperated", "Cell Type/Cluster:",
c(meta_cats))),
div(style="display: inline-block;vertical-align:top; width: 20%;",
selectInput("identity_seperated2", "Identity:",
c(meta_cats))),
div(style="display: inline-block;vertical-align:top; width: 20%;",
selectInput("numeric_seperated", "Primary Numeric:", "")),
mainPanel(width = 12,
br(),
br(),
#h3(textOutput("caption")),
plotOutput("SeperatedFeature", height = "500px"),
plotOutput("SeperatedDim"),
plotOutput("SeperatedViolin", width="2000px"),
tableOutput("SeperatedCounts")
)
),
tabPanel("Seperated Categorical", value=8,
br(),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("dataset_sepcat", "Dataset",
c(datasets))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("reduction_seperated_categorical", "Reduction:",
c(reductions))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("identity_seperated_categorical", "Identity:",
c(meta_cats))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("identity2_seperated_categorical", "Secondary Identity:", "")),
mainPanel(width = 12,
br(),
br(),
#h3(textOutput("caption")),
plotOutput("SeperatedIdentityCategorical", height = "500px"),
plotOutput("SeperatedIdentity2Categorical"),
plotOutput("SeperatedCountsCategorical")
)
),
tabPanel("Marker Table", value=9,
br(),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("dataset_marktab", "Dataset",
c(datasets))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("identity_table", "Identity:",
c(meta_cats))),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("markers_table", "Get markers for:", "", multiple = TRUE)),
div(style="display: inline-block;vertical-align:top; width: 24%;",
selectInput("compare_table", "Compare to (blank is all other groups):", "", multiple = TRUE)),
mainPanel(width = 12,
br(),
br(),
#h3(textOutput("caption")),
tableOutput("markers")
)
),
#                  id = "tabselected"
)
),
mainPanel(width = 12)
)
)
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
shiny::runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
shiny::runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
colnames(aggregate)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
head(aggregate)
Features(aggregate)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
rownames(aggregate@assays$RNA)
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
names <- rownames(aggregate@assays$RNA)
aggregate <- readRDS('datasets/rat.ss.MSA.RNA.anno.v2.rds')
if (names != rownames(aggregate@assays$RNA)) {
print("not the same")
} else {
print("the same")
}
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
names <- rownames(aggregate@assays$RNA)
aggregate <- readRDS('datasets/rat.ss.MSA.RNA.anno.v2.rds')
if (isTRUE(all.equal(names, rownames(aggregate@assays$RNA)))) {
print("same")
} else {
print("not the same")
}
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
names <- rownames(aggregate@assays$RNA)
aggregate <- readRDS('datasets/rat.ss.LV.RNA.anno.v2.rds')
if (isTRUE(all.equal(names, rownames(aggregate@assays$RNA)))) {
print("same")
} else {
print("not the same")
}
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
names <- rownames(aggregate@assays$RNA)
aggregate2 <- readRDS('datasets/rat.ss.LV.RNA.anno.v2.rds')
if (isTRUE(all.equal(names, rownames(aggregate2@assays$RNA)))) {
print("same")
} else {
print("not the same")
}
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
names <- rownames(aggregate@assays$RNA)
aggregate2 <- readRDS('datasets/rat.ss.LV.RNA.anno.v2.rds')
if (isTRUE(all.equal(names, rownames(aggregate2@assays$RNA)))) {
print("same")
} else {
print("not the same")
}
aggregate2 <- readRDS('datasets/rat.ss.LV.RNA.anno.v2.rds')
library(shiny)
library(shinyjs)
library(Seurat)
library(ggplot2)
library(dplyr)
library(markdown)
library(tidyr)
library(ggthemes)
library(plotly)
# Some initial setup:
# this will not work if underscores are in the orig.ident (only for some views)
# take in the file, get list of genes, get metadata numbers and categories, get pcs 1-9, and factors..
aggregate <- readRDS('datasets/mouse.MCA.RNA.anno.v2.rds') # default one
datasets <- c('rat.ss.MSA.RNA.anno.v2.rds', 'rat.ss.LV.RNA.anno.v2.rds', 'rat.ss.LK.multiomics.anno.v2.rds', 'rat.ss.HYP.RNA.anno.rds', 'rat.sp.MSA.RNA.anno.v2.rds', 'rat.sp.MCA.RNA.anno.v2.rds', 'rat.sp.LV.RNA.anno.v2.rds', 'rat.sp.LK.multiomics.anno.v2.rds', 'rat.sp.HYP.RNA.anno.rds', 'mouse.MCA.RNA.anno.v2.rds', 'mouse.LV.RNA.anno.v2.rds', 'mouse.LK.multiomics.anno.v2.rds', 'mouse.HYP.RNA.anno.rds')
download_links <- c('https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Ess%2EMSA%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Ess%2ELV%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Ess%2ELK%2Emultiomics%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Ess%2EHYP%2ERNA%2Eanno%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Esp%2EMSA%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Esp%2EMCA%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Esp%2ELV%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Esp%2ELK%2Emultiomics%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Frat%2Esp%2EHYP%2ERNA%2Eanno%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Fmouse%2EMCA%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Fmouse%2ELV%2ERNA%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Fmouse%2ELK%2Emultiomics%2Eanno%2Ev2%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets', 'https://emailarizona-my.sharepoint.com/personal/vinodkumar1_arizona_edu/_layouts/15/onedrive.aspx?sortField=LinkFilename&isAscending=false&ct=1710442705495&or=Teams%2DHL&ga=1&download=1&id=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets%2Fmouse%2EHYP%2ERNA%2Eanno%2Erds&parent=%2Fpersonal%2Fvinodkumar1%5Farizona%5Fedu%2FDocuments%2FscRNAseq%5Fdata%2Fdatasets')
links_mapping <- setNames(download_links, datasets)
# default values
genes <- aggregate@assays$RNA
reductions <- attributes(aggregate@reductions)
meta_nums <- colnames(dplyr::select_if(aggregate@meta.data, is.numeric))
meta_cats <- c(colnames(dplyr::select_if(aggregate@meta.data, is.character)),
colnames(dplyr::select_if(aggregate@meta.data, is.factor)),
colnames(dplyr::select_if(aggregate@meta.data, is.logical)))
meta_cats <- meta_cats[meta_cats != "orig.ident"]
mysplitbydefault <- "major_cluster"
#mysplitbydefault <- "CellType"
pcs <- c('PC_1','PC_2','PC_3','PC_4','PC_5','PC_6','PC_7','PC_8','PC_9')
use.pcs <- 1:50
(genes)
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
shiny::runApp('Programming/hypertension-dataset-explorer')
runApp('Programming/hypertension-dataset-explorer')
